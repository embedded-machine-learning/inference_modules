# report result parser

import os, logging
import json
import pandas as pd
from pathlib import Path

__author__ = "Matthias Wess"
__copyright__ = "Christian Doppler Laboratory for Embedded Machine Learning"
__license__ = "Apache 2.0"


def read_report(report="", outfolder="./tmp/", n = 100):
    """Reads file in a pandas dataframe and writes layer data into a json file

    Args:
        outfolder: folder where the json data will be stored
        report: filename of the report where the data will be extracted
        format: data format to save the data with - json

    Returns: False if File does not exist 
    """

    if not os.path.exists(Path(report)):
        return False
    # Open the text file and read its contents
    

    # Parse the JSON data
    data = json.loads(Path(report).read_text())

    # transform to pandas dataframe
    data = pd.DataFrame(data)


    # Print the dataframe
    print(data)
    print(data.columns)
    # eliminate where cat == Session
    data = data[data['cat'] != 'Session']
    print(data)
    print(data['dur'].sum())

    median = data.median()
    print(median)
    df = pd.DataFrame(columns=['name', 'time(ms)'])
    df = df.append({'name': 'total', 'time(ms)': median['computeMs']}, ignore_index=True)
    
    print(df)
    
    return df

def r2a(report, n = 100):
    data = read_report(report, n = n)

    if data is False:
        return False
    
    result = data

    return result


def extract_data_from_folder(infold, outfold):
    """Extracts layer name and real time data from a folder of ncs2 reports

    Args:
        infold: folder containing the reports generated by benchmark_app.py
        outfold: folder where the extracted results will be saved

    Returns: none
    """

    # if the output data directory does not exist, create it
    os.makedirs(outfold, exist_ok=True)

    # avg_count holds the csv filenames of the benchmark_average_counters containing layer data
    avg_count = [f for f in os.listdir(infold) if "benchmark_average_counters_report" in f]

    # go over files and extract data
    for i, report in enumerate(avg_count):
        print(i + 1, ": parsing " + os.path.join(infold, report))
        read_report(report=os.path.join(infold, report), outfolder=outfold)


if __name__ == "__main__":
    import argparse
    parser = argparse.ArgumentParser(description='Vela parser')
    parser.add_argument("-if", '--infold', default='./report',
                        help='Folder containing reports', required=True)
    parser.add_argument("-of", '--outfold', default='report_async_extracted',
                        help='folder which will contain the output json files', required=False)
    args = parser.parse_args()
    read_report(args.infold, args.outfold)
    #r2a(args.infold)

